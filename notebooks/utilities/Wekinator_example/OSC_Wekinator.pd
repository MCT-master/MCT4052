#N canvas 686 141 970 738 12;
#X msg 25 33 listen 0;
#X obj 25 101 netreceive -u -b;
#X obj 25 137 oscparse;
#X msg 50 482 disconnect;
#X obj 34 646 netsend -u -b;
#X text 22 10 OSC receive:;
#X text 25 429 OSC send;
#X text 648 23 OSC msg example: /frequency 440 or /amp 0.5 So the syntax = /address + msg, f 45;
#X text 651 59 Data types: (i) Integer \, a whole number (f) Float \, a decimal number (s) String \, chain of character (b) Blob \, block of binary data, f 40;
#X obj 24 175 list trim;
#X obj 24 203 route accxyz;
#X text 131 60 OSC port;
#X text 649 124 To convert a list to a non-list meta-message \, use [list trim] which will strip off the "list" again and leave you the rest., f 37;
#N canvas 179 217 671 346 OSC? 0;
#X text 131 100 Open Sound Control (OSC) is a protocol for networking sound synthesizers \, computers \, and other multimedia devices for purposes such as musical performance or show control. OSC's advantages include interoperability \, accuracy \, flexibility and enhanced organization and documentation.[1] The first specification was released in March 2002 (Wiki);
#X restore 567 30 pd OSC?;
#X obj 24 231 s ACC;
#X msg 46 60 listen 6668;
#X msg 26 451 connect localhost 5555;
#X obj 162 490 r ACC;
#X obj 236 497 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 161 522 spigot;
#X obj 161 550 oscformat wek inputs;
#X obj 246 77 netreceive -u -b;
#X obj 246 113 oscparse;
#X msg 245 48 listen 12000;
#X obj 452 496 print from_Wek;
#X obj 252 294 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#N canvas 127 111 862 860 Frequency_Modulation-L 1;
#X obj 38 474 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 278 529 5 0 0 0 - - - 0;
#X obj 280 507 hsl 128 15 0.01 1 1 0 empty empty Volume -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 259 555 *~;
#X obj 165 658 *~;
#X obj 128 722 throw~ left;
#X obj 38 60 inlet on-off;
#X floatatom 285 106 5 0 1000 0 - - - 0;
#X obj 285 129 osc~;
#X obj 285 196 *~;
#X floatatom 313 196 5 0 1000 0 - - - 0;
#X obj 259 346 +~;
#X obj 256 412 osc~;
#X text 294 370 Carrier;
#X floatatom 288 324 5 0 0 0 - - - 0;
#X obj 288 59 hsl 128 15 0 1000 0 0 empty empty Modulation\ fq -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 333 144 hsl 128 15 0 1000 0 0 empty empty Modulation\ amount -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 291 294 hsl 128 15 0 10000 0 0 empty empty Carrier\ fq -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X text 283 647 One oscillator is “carrier” and the other is “modulator”. Using a low frequency with the “modulator” will result in vibrato. Beginning at 20 Hz \, increasing this frequency will result in a more and more complex multiphonic;
#X text 284 729 The resulting wave is the summation of many different sine waves \; the carrier frequency lies in the middle while the other tones lie above and below it at distances determined by the modulation frequency. (Kreidler \, p.166);
#X text 439 179 Frequency modulation synthesis (or FM synthesis) is a form of sound synthesis whereby the frequency of a waveform is changed by modulating its frequency with a modulator. The frequency of an oscillator is altered "in accordance with the amplitude of a modulating signal"., f 51;
#X obj 130 131 r fmL;
#X obj 130 155 unpack f f f f;
#X obj 115 187 scale 0 1 0 1000;
#X obj 124 212 scale 0 1 0 1000;
#X obj 132 239 scale 0 1 0 3000;
#X connect 0 0 4 1;
#X connect 1 0 3 1;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 0 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 10 0 9 1;
#X connect 11 0 12 0;
#X connect 12 0 3 0;
#X connect 14 0 11 1;
#X connect 15 0 7 0;
#X connect 16 0 10 0;
#X connect 17 0 14 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 22 2 25 0;
#X connect 22 3 2 0;
#X connect 23 0 15 0;
#X connect 24 0 16 0;
#X connect 25 0 17 0;
#X restore 252 314 pd Frequency_Modulation-L;
#X msg 848 674 \; pd dsp \$1;
#X obj 848 653 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#N canvas 237 275 253 131 r~ 0;
#X obj 30 77 dac~, f 17;
#X obj 31 21 catch~ left;
#X obj 146 23 catch~ right;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X restore 878 650 pd r~;
#X obj 245 147 list trim;
#X obj 245 177 route wek;
#X obj 245 201 unpack f f f f f f f f, f 37;
#X obj 249 236 pack f f f f;
#X obj 400 240 pack f f f f;
#X obj 248 265 s fmL;
#X obj 400 264 s fmR;
#X obj 252 341 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#N canvas 866 137 862 860 Frequency_Modulation-R 1;
#X obj 38 474 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X floatatom 278 529 5 0 0 0 - - - 0;
#X obj 280 507 hsl 128 15 0.01 1 1 0 empty empty Volume -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 259 555 *~;
#X obj 165 658 *~;
#X obj 38 60 inlet on-off;
#X floatatom 285 106 5 0 1000 0 - - - 0;
#X obj 285 129 osc~;
#X obj 285 196 *~;
#X floatatom 313 196 5 0 1000 0 - - - 0;
#X obj 259 346 +~;
#X obj 256 412 osc~;
#X text 294 370 Carrier;
#X floatatom 288 324 5 0 0 0 - - - 0;
#X obj 288 59 hsl 128 15 0 1000 0 0 empty empty Modulation\ fq -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 333 144 hsl 128 15 0 1000 0 0 empty empty Modulation\ amount -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 291 294 hsl 128 15 0 10000 0 0 empty empty Carrier\ fq -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X text 283 647 One oscillator is “carrier” and the other is “modulator”. Using a low frequency with the “modulator” will result in vibrato. Beginning at 20 Hz \, increasing this frequency will result in a more and more complex multiphonic;
#X text 284 729 The resulting wave is the summation of many different sine waves \; the carrier frequency lies in the middle while the other tones lie above and below it at distances determined by the modulation frequency. (Kreidler \, p.166);
#X text 439 179 Frequency modulation synthesis (or FM synthesis) is a form of sound synthesis whereby the frequency of a waveform is changed by modulating its frequency with a modulator. The frequency of an oscillator is altered "in accordance with the amplitude of a modulating signal"., f 51;
#X obj 130 155 unpack f f f f;
#X obj 115 187 scale 0 1 0 1000;
#X obj 124 212 scale 0 1 0 1000;
#X obj 130 131 r fmR;
#X obj 128 722 throw~ right;
#X obj 132 239 scale 0 1 0 2000;
#X connect 0 0 4 1;
#X connect 1 0 3 1;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 24 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 8 1;
#X connect 10 0 11 0;
#X connect 11 0 3 0;
#X connect 13 0 10 1;
#X connect 14 0 6 0;
#X connect 15 0 9 0;
#X connect 16 0 13 0;
#X connect 20 0 21 0;
#X connect 20 1 22 0;
#X connect 20 2 25 0;
#X connect 20 3 2 0;
#X connect 21 0 14 0;
#X connect 22 0 15 0;
#X connect 23 0 20 0;
#X connect 25 0 16 0;
#X restore 252 361 pd Frequency_Modulation-R;
#X obj 618 316 netreceive -u -b;
#X obj 618 352 oscparse;
#X obj 617 386 list trim;
#X obj 617 416 route wek;
#X obj 56 323 print OSC;
#X msg 617 287 listen 12002;
#X obj 617 443 change;
#X text 245 26 REGRESSION;
#X text 614 260 CLASSIFICATION;
#X obj 594 585 pluck~, f 14;
#X obj 581 556 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 594 609 throw~ left;
#X obj 685 610 throw~ right;
#X obj 617 489 sel 1 2 3;
#X obj 637 552 t b i;
#X msg 606 516 60;
#X msg 642 516 67;
#X msg 675 517 72;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 9 0 10 0;
#X connect 10 0 14 0;
#X connect 10 0 43 0;
#X connect 15 0 1 0;
#X connect 16 0 4 0;
#X connect 17 0 19 0;
#X connect 18 0 19 1;
#X connect 19 0 20 0;
#X connect 20 0 4 0;
#X connect 21 0 22 0;
#X connect 22 0 30 0;
#X connect 23 0 21 0;
#X connect 25 0 26 0;
#X connect 28 0 27 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 32 1 33 1;
#X connect 32 2 33 2;
#X connect 32 3 33 3;
#X connect 32 4 34 0;
#X connect 32 5 34 1;
#X connect 32 6 34 2;
#X connect 32 7 34 3;
#X connect 33 0 35 0;
#X connect 34 0 36 0;
#X connect 37 0 38 0;
#X connect 39 0 40 0;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 42 0 45 0;
#X connect 44 0 39 0;
#X connect 45 0 52 0;
#X connect 45 0 24 0;
#X connect 48 0 50 0;
#X connect 48 0 51 0;
#X connect 49 0 48 0;
#X connect 52 0 54 0;
#X connect 52 1 55 0;
#X connect 52 2 56 0;
#X connect 53 0 49 0;
#X connect 53 1 48 1;
#X connect 54 0 53 0;
#X connect 55 0 53 0;
#X connect 56 0 53 0;
