{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# MCT4052 Workshop 9b: Autoregressive RNN Raw Audio Generation\n",
    "\n",
    "*Author: Stefano Fasciani, stefano.fasciani@imv.uio.no, Department of Musicology, University of Oslo.*\n",
    "\n",
    "This notebook present the same application Workshop 9b, but  in this case we use [Tensorflow Recurrent Neural Network architectures](https://www.tensorflow.org/guide/keras/rnn). In this case we can work with a much smaller input sequence and model more complex audio signals. Mind that the computational complexity, especially for the training part can be significant (but also the inference).\n",
    "\n",
    "In the example, at least in the starting form, we generate sinuosid signal, and we use the oldest \"sequence_length\" samples to predict the next one. After the RNN is defined and trained. The inference process starts with a sample pipeline line full of noise, that we gradually fill up with RNN generated audio samples."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-03-13 10:41:41.263079: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
      "To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import librosa\n",
    "import sklearn\n",
    "import scipy\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.style as ms\n",
    "#ms.use(\"seaborn-v0_8\")\n",
    "import IPython.display as Ipd\n",
    "import os\n",
    "import tensorflow as tf\n",
    "\n",
    "\n",
    "%config IPCompleter.greedy=True\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#generating periodic sinusoidal signal\n",
    "sr = 16000\n",
    "\n",
    "#frequency\n",
    "f1 = 440\n",
    "\n",
    "#amplitude\n",
    "A = 0.5\n",
    "\n",
    "t=np.arange(0,10,1/sr)\n",
    "\n",
    "s = A*np.sin(2*np.pi*f1*t)\n",
    "\n",
    "plt.figure(figsize=(10, 4))\n",
    "plt.plot(s)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#setting size of the input and size of dataset\n",
    "#here we generate input output pairs in sequence as the order matters for the RNN training\n",
    "regression_size_smp = 64\n",
    "dataset_size = 50000 \n",
    "\n",
    "#creating empty arrays for input and output\n",
    "input_data=np.zeros((dataset_size,regression_size_smp))\n",
    "output_data=np.zeros(dataset_size)\n",
    "\n",
    "i = 0\n",
    "\n",
    "#taking slices of sequence_length samples at consecutive points plus the following sample as target output\n",
    "while (i < dataset_size):\n",
    "    input_data[i,:] = s[i:i+regression_size_smp]\n",
    "    output_data[i] = s[i+regression_size_smp]\n",
    "    i += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#splitting the dataset in training and testing parts 80/20\n",
    "#note that the data is not being randomly shuffled before/after splitting\n",
    "\n",
    "input_data_train  = input_data[0:int(input_data.shape[0]*0.8),:]\n",
    "input_data_test = input_data[int(input_data.shape[0]*0.8):input_data.shape[0],:]\n",
    "\n",
    "output_data_train  = output_data[0:int(output_data.shape[0]*0.8)]\n",
    "output_data_test  = output_data[int(output_data.shape[0]*0.8):output_data.shape[0]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " simple_rnn (SimpleRNN)      (1, 32)                   1088      \n",
      "                                                                 \n",
      " dense (Dense)               (1, 1)                    33        \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 1121 (4.38 KB)\n",
      "Trainable params: 1121 (4.38 KB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n",
      "You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) for plot_model to work.\n"
     ]
    }
   ],
   "source": [
    "# defining and displaying the model\n",
    "\n",
    "model = tf.keras.Sequential([\n",
    "    tf.keras.layers.Input(batch_shape=(1,regression_size_smp,1)), # the RNN expect 3D array, so we specify batches of 1\n",
    "    tf.keras.layers.SimpleRNN(32, activation='relu',stateful=True), #number of  units 4 is the vector size for C and H,\n",
    "    #stateful must be true to remember across batches (in our case we work with a single batch, which is prediction of one sample)\n",
    "    tf.keras.layers.Dense(1) # no activation layer on the output, we predict one sample only\n",
    "])\n",
    "\n",
    "model.summary()\n",
    "\n",
    "model.compile(\n",
    "    optimizer=tf.keras.optimizers.Adam(),#learning_rate=0.01\n",
    "    loss='mean_squared_error')\n",
    "\n",
    "tf.keras.utils.plot_model(model, \"my_first_model_with_shape_info.png\", show_shapes=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36000/36000 [==============================] - 164s 5ms/step - loss: 9.2555e-04 - val_loss: 1.2457e-04\n",
      "36000/36000 [==============================] - 161s 4ms/step - loss: 1.2227e-04 - val_loss: 1.5082e-05\n",
      "36000/36000 [==============================] - 160s 4ms/step - loss: 7.8446e-05 - val_loss: 2.8032e-05\n",
      "36000/36000 [==============================] - 164s 5ms/step - loss: 6.7386e-05 - val_loss: 8.8344e-07\n"
     ]
    }
   ],
   "source": [
    "#we iterate over epochs manually because we need to reset the internal states at the end of each epoch\n",
    "#is also important to set the data shuffling to false\n",
    "#early stopping condition must be implemented manually\n",
    "\n",
    "loss=[] #we keep trak of losses manually\n",
    "val_loss=[]\n",
    "\n",
    "epochs = 4\n",
    "\n",
    "for i in range(0,epochs):# number of epochs\n",
    "    \n",
    "    history = model.fit(\n",
    "        input_data_train,\n",
    "        output_data_train,\n",
    "        batch_size=1,\n",
    "        epochs=1,\n",
    "        shuffle=False,\n",
    "        validation_split = 0.1\n",
    "    )\n",
    "\n",
    "    loss.append(history.history['loss'])\n",
    "    val_loss.append(history.history['val_loss'])\n",
    "    \n",
    "    model.reset_states() # reset internal states before starting with the next epoch\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(loss)\n",
    "plt.plot(val_loss)\n",
    "plt.title('model accuracy')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'val'], loc='upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10000/10000 [==============================] - 20s 2ms/step\n",
      "Coefficient of determination (r2 score): 1.0000\n"
     ]
    }
   ],
   "source": [
    "model.reset_states()\n",
    "output_data_pred = model.predict(input_data_test,batch_size=1)\n",
    "\n",
    "from sklearn.metrics import r2_score\n",
    "print('Coefficient of determination (r2 score): %.4f'% r2_score(output_data_test, output_data_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 113ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 24ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 24ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 24ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 24ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 28ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 24ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 51ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 24ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 24ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 28ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 16ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 25ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 25ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 26ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 23ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 52ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 50ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 22ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 21ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 17ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n",
      "1/1 [==============================] - 0s 19ms/step\n",
      "1/1 [==============================] - 0s 18ms/step\n",
      "1/1 [==============================] - 0s 20ms/step\n"
     ]
    }
   ],
   "source": [
    "#size of the generated signal in samples\n",
    "out_sig_size = 1000\n",
    "\n",
    "#starting with a sample pipeline full of noise\n",
    "#if the model fails from such \"cold start\" try to sill up the input pipeline with an input from the test set\n",
    "inout_pipeline = np.random.random_sample(regression_size_smp) # using a 1D array for simplicity (we need to reshape this for the model.prediction\n",
    "\n",
    "\n",
    "#empty array for the output signal\n",
    "sig_out = np.zeros(out_sig_size)\n",
    "\n",
    "#loop generating signal offline\n",
    "i = 0\n",
    "model.reset_states()\n",
    "while (i < out_sig_size):\n",
    "    temp = model.predict(inout_pipeline.reshape(1,-1))\n",
    "    sig_out[i] = temp\n",
    "    inout_pipeline = np.append(inout_pipeline,temp)#latest output one at the end\n",
    "    inout_pipeline = np.delete(inout_pipeline,0)#removing the oldest from the front\n",
    "    i += 1\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "                <audio  controls=\"controls\" >\n",
       "                    <source src=\"data:audio/wav;base64,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\" type=\"audio/wav\" />\n",
       "                    Your browser does not support the audio element.\n",
       "                </audio>\n",
       "              "
      ],
      "text/plain": [
       "<IPython.lib.display.Audio object>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 4))\n",
    "plt.plot(sig_out)\n",
    "plt.show()\n",
    "\n",
    "Ipd.Audio(sig_out.flatten(), rate=sr)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Follow up activities\n",
    "\n",
    "1. Try different types of RNN cells, such ad the LSTM and GRU available in [tensorflow](https://www.tensorflow.org/guide/keras/rnn).\n",
    "2. Experiment wirh reducing the lenght of the sequence used as input for the RNN, eventually working with a single sample (this many need to increase the number of units in the RNN). With a single sample you can also optimize the generation part (remove the pipeline for the autoregression).\n",
    "3. use a different type of audio signals for the training (perhaps a frequency sweep or something more complex), or use an input and output that are perhaps input and output of an audio digital filter.\n",
    "4. add another RNN layer (this require setting \"return_sequences=True\" in the first RNN layer).\n",
    "5. Try to include the dropout layer or option\n",
    "6. modify the code so that it works with a stereo input and oputput (input_size must be 2), as well as 2 neurons are needed at the output of the network. You can think to work with two independent output neurons by using a non sequential model (more on this [here](https://www.tensorflow.org/guide/keras/functional), which was also used in [this example](https://www.tensorflow.org/tutorials/audio/music_generation)).\n",
    "7. Use the same approac to predict a sequence of notes of a monoponic sequence/melody (e.g. feed the nerwork with a sequence of Pitch-Duration values (flattened), or attempt with pitch only first. In this case the [tf.keras.layers.Embedding](https://www.tensorflow.org/api_docs/python/tf/keras/layers/Embedding) can be useful to convert discrete sets into float numbers.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
